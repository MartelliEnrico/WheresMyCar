name: Build Release APK

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build Release APK
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      actions: read
      contents: write
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set Up JDK
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 21

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Create secrets.properties
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEYSTORE_PATH: ${{ secrets.KEYSTORE_PATH }}
        MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
      run: |
        echo storePassword=$KEYSTORE_PASSWORD >> ./secrets.properties
        echo keyPassword=$KEYSTORE_PASSWORD >> ./secrets.properties
        echo storeFile=$KEYSTORE_PATH >> ./secrets.properties
        echo MAPS_API_KEY=$MAPS_API_KEY >> ./secrets.properties

    - name: Decode keystore
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        KEYSTORE_PATH: ${{ secrets.KEYSTORE_PATH }}
      run: |
        echo $KEYSTORE_BASE64 > keystore-b64.txt
        base64 -d keystore-b64.txt > app/$KEYSTORE_PATH

    - name: Build
      run: ./gradlew :app:assembleRelease

    - name: Cleanup
      if: always()
      env:
        KEYSTORE_PATH: ${{ secrets.KEYSTORE_PATH }}
      run: |
        rm secrets.properties
        rm keystore-b64.txt
        rm app/$KEYSTORE_PATH

    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: android-build-outputs
        path: app/build/outputs/apk/release/app-release.apk
